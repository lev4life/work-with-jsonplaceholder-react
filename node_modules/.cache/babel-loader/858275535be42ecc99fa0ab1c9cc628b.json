{"ast":null,"code":"import _objectSpread from \"/Users/boris/Desktop/GitHub/work-with-jsonplaceholder-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/boris/Desktop/GitHub/work-with-jsonplaceholder-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/Users/boris/Desktop/GitHub/work-with-jsonplaceholder-react/src/components/CommentForm.jsx\";\nimport React, { useState } from 'react';\nimport Btn from './UI/button/Btn';\nimport Inp from './UI/input/Inp';\nvar CommentForm = function CommentForm(_ref) {\n  var create = _ref.create;\n  var _useState = useState({\n      name: '',\n      body: ''\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    comment = _useState2[0],\n    setComment = _useState2[1];\n  var addNewComment = function addNewComment(e) {\n    e.preventDefault();\n    var addNewComment = _objectSpread({}, comment, {\n      id: Date.now()\n    });\n    create(newComment);\n    setComment({\n      name: '',\n      id: Date.now()\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"form\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Inp, {\n    value: comment.name,\n    onChange: function onChange(e) {\n      return setComment(_objectSpread({}, comment, {\n        name: e.target.value\n      }));\n    },\n    type: \"text\",\n    placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u044F\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Inp, {\n    value: comment.body,\n    onChange: function onChange(e) {\n      return setComment(_objectSpread({}, comment, {\n        body: e.target.value\n      }));\n    },\n    type: \"text\",\n    placeholder: \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435 \\u043A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u044F\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Btn, {\n    onClick: addNewComment,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C\"));\n};\nexport default CommentForm;","map":{"version":3,"names":["React","useState","Btn","Inp","CommentForm","create","name","body","comment","setComment","addNewComment","e","preventDefault","id","Date","now","newComment","target","value"],"sources":["/Users/boris/Desktop/GitHub/work-with-jsonplaceholder-react/src/components/CommentForm.jsx"],"sourcesContent":["import React, { useState } from 'react'\nimport Btn from './UI/button/Btn'\nimport Inp from './UI/input/Inp'\n\nconst CommentForm = ({create}) => {\n\n  const [comment, setComment] = useState({name: '', body: ''})\n    \n\n\n    const addNewComment = (e) => {\n        e.preventDefault()\n        const addNewComment = {\n            ...comment, id: Date.now()\n        }\n        create(newComment)\n        setComment({name: '', id: Date.now()})\n      }\n\n      \n    return(\n        <form>\n        <Inp \n        value={comment.name}\n        onChange={e => setComment({...comment, name: e.target.value})}\n        type=\"text\" \n        placeholder=\"Название комментария\"\n        />\n\n        <Inp \n        value={comment.body}\n        onChange={e => setComment({...comment, body: e.target.value})}\n        type=\"text\" \n        placeholder=\"Описание комментария\"\n        /> \n\n        <Btn onClick={addNewComment}>Создать</Btn>\n      </form>\n    )\n}\n\nexport default CommentForm"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,GAAG,MAAM,iBAAiB;AACjC,OAAOC,GAAG,MAAM,gBAAgB;AAEhC,IAAMC,WAAW,GAAG,SAAdA,WAAW,OAAiB;EAAA,IAAZC,MAAM,QAANA,MAAM;EAAA,gBAEIJ,QAAQ,CAAC;MAACK,IAAI,EAAE,EAAE;MAAEC,IAAI,EAAE;IAAE,CAAC,CAAC;IAAA;IAArDC,OAAO;IAAEC,UAAU;EAIxB,IAAMC,aAAa,GAAG,uBAACC,CAAC,EAAK;IACzBA,CAAC,CAACC,cAAc,EAAE;IAClB,IAAMF,aAAa,qBACZF,OAAO;MAAEK,EAAE,EAAEC,IAAI,CAACC,GAAG;IAAE,EAC7B;IACDV,MAAM,CAACW,UAAU,CAAC;IAClBP,UAAU,CAAC;MAACH,IAAI,EAAE,EAAE;MAAEO,EAAE,EAAEC,IAAI,CAACC,GAAG;IAAE,CAAC,CAAC;EACxC,CAAC;EAGH,oBACI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACA,oBAAC,GAAG;IACJ,KAAK,EAAEP,OAAO,CAACF,IAAK;IACpB,QAAQ,EAAE,kBAAAK,CAAC;MAAA,OAAIF,UAAU,mBAAKD,OAAO;QAAEF,IAAI,EAAEK,CAAC,CAACM,MAAM,CAACC;MAAK,GAAE;IAAA,CAAC;IAC9D,IAAI,EAAC,MAAM;IACX,WAAW,EAAC,qHAAsB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAChC,eAEF,oBAAC,GAAG;IACJ,KAAK,EAAEV,OAAO,CAACD,IAAK;IACpB,QAAQ,EAAE,kBAAAI,CAAC;MAAA,OAAIF,UAAU,mBAAKD,OAAO;QAAED,IAAI,EAAEI,CAAC,CAACM,MAAM,CAACC;MAAK,GAAE;IAAA,CAAC;IAC9D,IAAI,EAAC,MAAM;IACX,WAAW,EAAC,qHAAsB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAChC,eAEF,oBAAC,GAAG;IAAC,OAAO,EAAER,aAAc;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAC,4CAAO,CAAM,CACrC;AAEb,CAAC;AAED,eAAeN,WAAW"},"metadata":{},"sourceType":"module"}