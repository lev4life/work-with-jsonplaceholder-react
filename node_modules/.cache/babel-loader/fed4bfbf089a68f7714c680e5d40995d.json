{"ast":null,"code":"import { useMemo } from 'react';\nexport var useSortedUsers = function useSortedUsers(users, sort) {\n  var sortedUsers = useMemo(function () {}, [sort, users]);\n  return sortedUsers;\n};\nexport var useUsers = function useUsers(users, sort, query) {\n  var sortedUsers = useSortedUsers(users, sort);\n  var sortedAndSerchedUsers = useMemo(function () {\n    return sortedUsers(function (user) {\n      return user.name.toLowerCase().includes(query.toLowerCase());\n    });\n  }, [query, sortedUsers]);\n  return sortedAndSerchedUsers;\n};","map":{"version":3,"names":["useMemo","useSortedUsers","users","sort","sortedUsers","useUsers","query","sortedAndSerchedUsers","user","name","toLowerCase","includes"],"sources":["/Users/boris/Desktop/GitHub/work-with-jsonplaceholder react/src/hooks/useUsers.js"],"sourcesContent":["import {useMemo} from 'react'\n\nexport const useSortedUsers = (users, sort) => {\n\n    const sortedUsers = useMemo(() => {\n\n\n\n\n\n      \n      }, [sort, users])\n\n      return sortedUsers;\n}\n\nexport const useUsers = (users, sort, query) => {\n    const sortedUsers = useSortedUsers(users, sort)\n\n    const sortedAndSerchedUsers = useMemo(() => {\n        return sortedUsers(user => user.name.toLowerCase().includes(query.toLowerCase()))\n      }, [query, sortedUsers])\n\n      return sortedAndSerchedUsers\n}"],"mappings":"AAAA,SAAQA,OAAO,QAAO,OAAO;AAE7B,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAc,CAAIC,KAAK,EAAEC,IAAI,EAAK;EAE3C,IAAMC,WAAW,GAAGJ,OAAO,CAAC,YAAM,CAOhC,CAAC,EAAE,CAACG,IAAI,EAAED,KAAK,CAAC,CAAC;EAEjB,OAAOE,WAAW;AACxB,CAAC;AAED,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAQ,CAAIH,KAAK,EAAEC,IAAI,EAAEG,KAAK,EAAK;EAC5C,IAAMF,WAAW,GAAGH,cAAc,CAACC,KAAK,EAAEC,IAAI,CAAC;EAE/C,IAAMI,qBAAqB,GAAGP,OAAO,CAAC,YAAM;IACxC,OAAOI,WAAW,CAAC,UAAAI,IAAI;MAAA,OAAIA,IAAI,CAACC,IAAI,CAACC,WAAW,EAAE,CAACC,QAAQ,CAACL,KAAK,CAACI,WAAW,EAAE,CAAC;IAAA,EAAC;EACnF,CAAC,EAAE,CAACJ,KAAK,EAAEF,WAAW,CAAC,CAAC;EAExB,OAAOG,qBAAqB;AAClC,CAAC"},"metadata":{},"sourceType":"module"}