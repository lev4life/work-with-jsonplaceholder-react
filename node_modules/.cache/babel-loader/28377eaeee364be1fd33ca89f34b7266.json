{"ast":null,"code":"import { useMemo } from 'react';\nexport var useSortedPosts = function useSortedPosts(posts, userId) {\n  if (userId !== 'nobody') {\n    return posts.filter(function (post) {\n      return post.userId === userId;\n    });\n  }\n  return posts;\n};\nexport var usePosts = function usePosts(posts, userId, query) {\n  var sortedPosts = useSortedPosts(posts, userId);\n  var sortedAndSerchedPosts = useMemo(function () {\n    return sortedPosts.filter(function (post) {\n      return post.title.toLowerCase().includes(query.toLowerCase());\n    });\n  }, [query, sortedPosts]);\n  return sortedAndSerchedPosts;\n};","map":{"version":3,"names":["useMemo","useSortedPosts","posts","userId","filter","post","usePosts","query","sortedPosts","sortedAndSerchedPosts","title","toLowerCase","includes"],"sources":["/Users/boris/Desktop/GitHub/work-with-jsonplaceholder-react/src/hooks/usePosts.js"],"sourcesContent":["import {useMemo} from 'react'\n\nexport const useSortedPosts = (posts, userId) => {\n\n  if(userId !== 'nobody') {\n    return posts.filter(post => post.userId === userId )\n  }\n  return posts\n}\n\nexport const usePosts = (posts, userId, query) => {\n    const sortedPosts = useSortedPosts(posts, userId)\n\n    const sortedAndSerchedPosts = useMemo(() => {\n        return sortedPosts.filter(post => post.title.toLowerCase().includes(query.toLowerCase()))\n      }, [query, sortedPosts])\n\n      return sortedAndSerchedPosts\n}"],"mappings":"AAAA,SAAQA,OAAO,QAAO,OAAO;AAE7B,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAc,CAAIC,KAAK,EAAEC,MAAM,EAAK;EAE/C,IAAGA,MAAM,KAAK,QAAQ,EAAE;IACtB,OAAOD,KAAK,CAACE,MAAM,CAAC,UAAAC,IAAI;MAAA,OAAIA,IAAI,CAACF,MAAM,KAAKA,MAAM;IAAA,EAAE;EACtD;EACA,OAAOD,KAAK;AACd,CAAC;AAED,OAAO,IAAMI,QAAQ,GAAG,SAAXA,QAAQ,CAAIJ,KAAK,EAAEC,MAAM,EAAEI,KAAK,EAAK;EAC9C,IAAMC,WAAW,GAAGP,cAAc,CAACC,KAAK,EAAEC,MAAM,CAAC;EAEjD,IAAMM,qBAAqB,GAAGT,OAAO,CAAC,YAAM;IACxC,OAAOQ,WAAW,CAACJ,MAAM,CAAC,UAAAC,IAAI;MAAA,OAAIA,IAAI,CAACK,KAAK,CAACC,WAAW,EAAE,CAACC,QAAQ,CAACL,KAAK,CAACI,WAAW,EAAE,CAAC;IAAA,EAAC;EAC3F,CAAC,EAAE,CAACJ,KAAK,EAAEC,WAAW,CAAC,CAAC;EAExB,OAAOC,qBAAqB;AAClC,CAAC"},"metadata":{},"sourceType":"module"}